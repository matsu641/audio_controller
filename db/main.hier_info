|main
CLOCK_50 => CLOCK_50.IN7
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => KEY[0].IN2
KEY[1] => KEY[1].IN2
KEY[2] => KEY[2].IN2
KEY[3] => KEY[3].IN2
PS2_CLK <> PS2_Demo:ps2.PS2_CLK
PS2_DAT <> PS2_Demo:ps2.PS2_DAT
LEDR[0] <= crosswalk_datapath:u3.stop_v
LEDR[1] <= crosswalk_datapath:u3.go_v
LEDR[2] <= crosswalk_datapath:u3.stop_h
LEDR[3] <= crosswalk_datapath:u3.go_h
HEX3[0] <= colour_hex_decoder:light_horizontal.display
HEX3[1] <= colour_hex_decoder:light_horizontal.display
HEX3[2] <= colour_hex_decoder:light_horizontal.display
HEX3[3] <= colour_hex_decoder:light_horizontal.display
HEX3[4] <= colour_hex_decoder:light_horizontal.display
HEX3[5] <= colour_hex_decoder:light_horizontal.display
HEX3[6] <= colour_hex_decoder:light_horizontal.display
HEX2[0] <= colour_hex_decoder:light_vertical.display
HEX2[1] <= colour_hex_decoder:light_vertical.display
HEX2[2] <= colour_hex_decoder:light_vertical.display
HEX2[3] <= colour_hex_decoder:light_vertical.display
HEX2[4] <= colour_hex_decoder:light_vertical.display
HEX2[5] <= colour_hex_decoder:light_vertical.display
HEX2[6] <= colour_hex_decoder:light_vertical.display
HEX1[0] <= countdown_hex_decoder:hex.dispL
HEX1[1] <= countdown_hex_decoder:hex.dispL
HEX1[2] <= countdown_hex_decoder:hex.dispL
HEX1[3] <= countdown_hex_decoder:hex.dispL
HEX1[4] <= countdown_hex_decoder:hex.dispL
HEX1[5] <= countdown_hex_decoder:hex.dispL
HEX1[6] <= countdown_hex_decoder:hex.dispL
HEX0[0] <= countdown_hex_decoder:hex.dispR
HEX0[1] <= countdown_hex_decoder:hex.dispR
HEX0[2] <= countdown_hex_decoder:hex.dispR
HEX0[3] <= countdown_hex_decoder:hex.dispR
HEX0[4] <= countdown_hex_decoder:hex.dispR
HEX0[5] <= countdown_hex_decoder:hex.dispR
HEX0[6] <= countdown_hex_decoder:hex.dispR
VGA_CLK <= fill:vga_map.VGA_CLK
VGA_HS <= fill:vga_map.VGA_HS
VGA_VS <= fill:vga_map.VGA_VS
VGA_BLANK_N <= fill:vga_map.VGA_BLANK_N
VGA_SYNC_N <= fill:vga_map.VGA_SYNC_N
VGA_R[0] <= fill:vga_map.VGA_R
VGA_R[1] <= fill:vga_map.VGA_R
VGA_R[2] <= fill:vga_map.VGA_R
VGA_R[3] <= fill:vga_map.VGA_R
VGA_R[4] <= fill:vga_map.VGA_R
VGA_R[5] <= fill:vga_map.VGA_R
VGA_R[6] <= fill:vga_map.VGA_R
VGA_R[7] <= fill:vga_map.VGA_R
VGA_G[0] <= fill:vga_map.VGA_G
VGA_G[1] <= fill:vga_map.VGA_G
VGA_G[2] <= fill:vga_map.VGA_G
VGA_G[3] <= fill:vga_map.VGA_G
VGA_G[4] <= fill:vga_map.VGA_G
VGA_G[5] <= fill:vga_map.VGA_G
VGA_G[6] <= fill:vga_map.VGA_G
VGA_G[7] <= fill:vga_map.VGA_G
VGA_B[0] <= fill:vga_map.VGA_B
VGA_B[1] <= fill:vga_map.VGA_B
VGA_B[2] <= fill:vga_map.VGA_B
VGA_B[3] <= fill:vga_map.VGA_B
VGA_B[4] <= fill:vga_map.VGA_B
VGA_B[5] <= fill:vga_map.VGA_B
VGA_B[6] <= fill:vga_map.VGA_B
VGA_B[7] <= fill:vga_map.VGA_B


|main|rate_divider:standard_clock
ClockIn => countdown[0].CLK
ClockIn => countdown[1].CLK
ClockIn => countdown[2].CLK
ClockIn => countdown[3].CLK
ClockIn => countdown[4].CLK
ClockIn => countdown[5].CLK
ClockIn => countdown[6].CLK
ClockIn => countdown[7].CLK
ClockIn => countdown[8].CLK
ClockIn => countdown[9].CLK
ClockIn => countdown[10].CLK
ClockIn => countdown[11].CLK
ClockIn => countdown[12].CLK
ClockIn => countdown[13].CLK
ClockIn => countdown[14].CLK
ClockIn => countdown[15].CLK
ClockIn => countdown[16].CLK
ClockIn => countdown[17].CLK
ClockIn => countdown[18].CLK
ClockIn => countdown[19].CLK
ClockIn => countdown[20].CLK
ClockIn => countdown[21].CLK
ClockIn => countdown[22].CLK
ClockIn => countdown[23].CLK
ClockIn => countdown[24].CLK
ClockIn => countdown[25].CLK
ClockIn => countdown[26].CLK
ClockIn => countdown[27].CLK
ClockIn => countdown[28].CLK
ClockIn => countdown[29].CLK
ClockIn => countdown[30].CLK
ClockIn => countdown[31].CLK
Reset => always0.IN1
Enable <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|main|PS2_Demo:ps2
CLOCK_50 => CLOCK_50.IN1
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => last_data_received.OUTPUTSELECT
KEY[0] => _.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
PS2_CLK <> PS2_Controller:PS2.PS2_CLK
PS2_DAT <> PS2_Controller:PS2.PS2_DAT
output_3bits[0] <= output_3bits[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_3bits[1] <= output_3bits[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_3bits[2] <= output_3bits[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|PS2_Demo:ps2|PS2_Controller:PS2
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w[0].IN1
the_command[1] => the_command_w[1].IN1
the_command[2] => the_command_w[2].IN1
the_command[3] => the_command_w[3].IN1
the_command[4] => the_command_w[4].IN1
the_command[5] => the_command_w[5].IN1
the_command[6] => the_command_w[6].IN1
the_command[7] => the_command_w[7].IN1
send_command => send_command_w.IN1
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= Altera_UP_PS2_Command_Out:PS2_Command_Out.command_was_sent
error_communication_timed_out <= Altera_UP_PS2_Command_Out:PS2_Command_Out.error_communication_timed_out
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|main|PS2_Demo:ps2|PS2_Controller:PS2|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|PS2_Demo:ps2|PS2_Controller:PS2|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|display_counter:u0
Clock => CounterValue[0]~reg0.CLK
Clock => CounterValue[1]~reg0.CLK
Clock => CounterValue[2]~reg0.CLK
Clock => CounterValue[3]~reg0.CLK
Clock => CounterValue[4]~reg0.CLK
Clock => done~reg0.CLK
Reset => CounterValue.OUTPUTSELECT
Reset => CounterValue.OUTPUTSELECT
Reset => CounterValue.OUTPUTSELECT
Reset => CounterValue.OUTPUTSELECT
Reset => CounterValue.OUTPUTSELECT
Reset => done.OUTPUTSELECT
Enable => done.OUTPUTSELECT
Enable => CounterValue.OUTPUTSELECT
Enable => CounterValue.OUTPUTSELECT
Enable => CounterValue.OUTPUTSELECT
Enable => CounterValue.OUTPUTSELECT
Enable => CounterValue.OUTPUTSELECT
red => ~NO_FANOUT~
yellow => highest.OUTPUTSELECT
yellow => highest.OUTPUTSELECT
yellow => highest.OUTPUTSELECT
yellow => highest.OUTPUTSELECT
yellow => highest.OUTPUTSELECT
green => highest.OUTPUTSELECT
green => highest.OUTPUTSELECT
green => highest.OUTPUTSELECT
green => highest.OUTPUTSELECT
green => highest.OUTPUTSELECT
countdown => highest.OUTPUTSELECT
countdown => highest.OUTPUTSELECT
countdown => highest.OUTPUTSELECT
countdown => highest.OUTPUTSELECT
countdown => highest.OUTPUTSELECT
num_of_cars[0] => Decoder0.IN1
num_of_cars[0] => highest.DATAB
num_of_cars[1] => Decoder0.IN0
num_of_cars[1] => highest.DATAB
num_of_cars[1] => highest.DATAB
num_of_cars[1] => highest.DATAB
num_of_cars[1] => highest.DATAB
CounterValue[0] <= CounterValue[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CounterValue[1] <= CounterValue[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CounterValue[2] <= CounterValue[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CounterValue[3] <= CounterValue[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CounterValue[4] <= CounterValue[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|FSM:u1
Clock => stop_ver~reg0.CLK
Clock => countdown_ver~reg0.CLK
Clock => walk_ver~reg0.CLK
Clock => stop_hor~reg0.CLK
Clock => countdown_hor~reg0.CLK
Clock => walk_hor~reg0.CLK
Clock => red_ver~reg0.CLK
Clock => yellow_ver~reg0.CLK
Clock => green_ver~reg0.CLK
Clock => red_hor~reg0.CLK
Clock => yellow_hor~reg0.CLK
Clock => green_hor~reg0.CLK
Clock => current_state~1.DATAIN
Reset => next_state.STOP_HORIZONTAL.OUTPUTSELECT
Reset => next_state.SH_HOLD.OUTPUTSELECT
Reset => next_state.GO_HORIZONTAL.OUTPUTSELECT
Reset => next_state.GH_HOLD.OUTPUTSELECT
Reset => next_state.COUNTDOWN_HORIZONTAL.OUTPUTSELECT
Reset => next_state.CH_HOLD.OUTPUTSELECT
Reset => next_state.YELLOW_HORIZONTAL.OUTPUTSELECT
Reset => next_state.YH_HOLD.OUTPUTSELECT
Reset => next_state.STOP_VERTICAL.OUTPUTSELECT
Reset => next_state.SV_HOLD.OUTPUTSELECT
Reset => next_state.GO_VERTICAL.OUTPUTSELECT
Reset => next_state.GV_HOLD.OUTPUTSELECT
Reset => next_state.COUNTDOWN_VERTICAL.OUTPUTSELECT
Reset => next_state.CV_HOLD.OUTPUTSELECT
Reset => next_state.YELLOW_VERTICAL.OUTPUTSELECT
Reset => next_state.YV_HOLD.OUTPUTSELECT
Enable => Selector2.IN1
Enable => Selector4.IN1
Enable => Selector6.IN1
Enable => Selector8.IN1
Enable => Selector10.IN1
Enable => Selector12.IN1
Enable => Selector14.IN1
Enable => Selector0.IN2
Enable => Selector1.IN1
Enable => Selector3.IN1
Enable => Selector5.IN1
Enable => Selector7.IN1
Enable => Selector9.IN1
Enable => Selector11.IN1
Enable => Selector13.IN1
Enable => Selector15.IN1
input_signal[0] => Equal0.IN2
input_signal[0] => Equal1.IN0
input_signal[0] => Equal2.IN2
input_signal[0] => Equal3.IN1
input_signal[0] => Equal4.IN2
input_signal[0] => Equal5.IN1
input_signal[1] => Equal0.IN1
input_signal[1] => Equal1.IN2
input_signal[1] => Equal2.IN0
input_signal[1] => Equal3.IN0
input_signal[1] => Equal4.IN1
input_signal[1] => Equal5.IN2
input_signal[2] => Equal0.IN0
input_signal[2] => Equal1.IN1
input_signal[2] => Equal2.IN1
input_signal[2] => Equal3.IN2
input_signal[2] => Equal4.IN0
input_signal[2] => Equal5.IN0
green_hor <= green_hor~reg0.DB_MAX_OUTPUT_PORT_TYPE
yellow_hor <= yellow_hor~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_hor <= red_hor~reg0.DB_MAX_OUTPUT_PORT_TYPE
green_ver <= green_ver~reg0.DB_MAX_OUTPUT_PORT_TYPE
yellow_ver <= yellow_ver~reg0.DB_MAX_OUTPUT_PORT_TYPE
red_ver <= red_ver~reg0.DB_MAX_OUTPUT_PORT_TYPE
walk_hor <= walk_hor~reg0.DB_MAX_OUTPUT_PORT_TYPE
countdown_hor <= countdown_hor~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop_hor <= stop_hor~reg0.DB_MAX_OUTPUT_PORT_TYPE
walk_ver <= walk_ver~reg0.DB_MAX_OUTPUT_PORT_TYPE
countdown_ver <= countdown_ver~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop_ver <= stop_ver~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|lights_datapath:u2
Clock => ~NO_FANOUT~
Reset => colour_ver[2].IN0
Reset => colour_hor[2].IN0
green_hor => out_signal.OUTPUTSELECT
green_hor => out_signal.OUTPUTSELECT
green_hor => colour_hor[1].OUTPUTSELECT
green_hor => colour_hor[2].IN1
green_hor => colour_hor[2].DATAA
yellow_hor => colour_hor[2].IN1
yellow_hor => colour_hor[1].DATAA
yellow_hor => out_signal.DATAA
yellow_hor => out_signal.DATAA
red_hor => colour_hor[1].OUTPUTSELECT
red_hor => colour_hor[2].IN1
red_hor => colour_hor[2].OUTPUTSELECT
green_ver => out_signal.OUTPUTSELECT
green_ver => out_signal.OUTPUTSELECT
green_ver => out_signal.OUTPUTSELECT
green_ver => colour_ver[1].OUTPUTSELECT
green_ver => colour_ver[2].IN1
green_ver => colour_ver[2].DATAA
yellow_ver => out_signal.OUTPUTSELECT
yellow_ver => out_signal.OUTPUTSELECT
yellow_ver => out_signal.OUTPUTSELECT
yellow_ver => colour_ver[2].IN1
yellow_ver => colour_ver[1].DATAA
red_ver => colour_ver[1].OUTPUTSELECT
red_ver => colour_ver[2].IN1
red_ver => colour_ver[2].OUTPUTSELECT
colour_hor[0] <= <GND>
colour_hor[1] <= colour_hor[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
colour_hor[2] <= colour_hor[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
colour_ver[0] <= <GND>
colour_ver[1] <= colour_ver[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
colour_ver[2] <= colour_ver[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
out_signal[0] <= out_signal.DB_MAX_OUTPUT_PORT_TYPE
out_signal[1] <= out_signal.DB_MAX_OUTPUT_PORT_TYPE
out_signal[2] <= out_signal.DB_MAX_OUTPUT_PORT_TYPE


|main|crosswalk_datapath:u3
ClockIn => ClockIn.IN1
Reset => Reset.IN1
walk_hor => stop_h.OUTPUTSELECT
walk_hor => go_h.OUTPUTSELECT
countdown_hor => stop_h.OUTPUTSELECT
countdown_hor => go_h.OUTPUTSELECT
stop_hor => stop_h.OUTPUTSELECT
stop_hor => go_h.OUTPUTSELECT
walk_ver => stop_v.OUTPUTSELECT
walk_ver => go_v.OUTPUTSELECT
countdown_ver => stop_v.OUTPUTSELECT
countdown_ver => go_v.OUTPUTSELECT
stop_ver => stop_v.OUTPUTSELECT
stop_ver => go_v.OUTPUTSELECT
go_h <= go_h~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop_h <= stop_h~reg0.DB_MAX_OUTPUT_PORT_TYPE
go_v <= go_v~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop_v <= stop_v~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|crosswalk_datapath:u3|rate_divider:crosswalk_count
ClockIn => countdown[0].CLK
ClockIn => countdown[1].CLK
ClockIn => countdown[2].CLK
ClockIn => countdown[3].CLK
ClockIn => countdown[4].CLK
ClockIn => countdown[5].CLK
ClockIn => countdown[6].CLK
ClockIn => countdown[7].CLK
ClockIn => countdown[8].CLK
ClockIn => countdown[9].CLK
ClockIn => countdown[10].CLK
ClockIn => countdown[11].CLK
ClockIn => countdown[12].CLK
ClockIn => countdown[13].CLK
ClockIn => countdown[14].CLK
ClockIn => countdown[15].CLK
ClockIn => countdown[16].CLK
ClockIn => countdown[17].CLK
ClockIn => countdown[18].CLK
ClockIn => countdown[19].CLK
ClockIn => countdown[20].CLK
ClockIn => countdown[21].CLK
ClockIn => countdown[22].CLK
ClockIn => countdown[23].CLK
ClockIn => countdown[24].CLK
ClockIn => countdown[25].CLK
ClockIn => countdown[26].CLK
ClockIn => countdown[27].CLK
ClockIn => countdown[28].CLK
ClockIn => countdown[29].CLK
ClockIn => countdown[30].CLK
ClockIn => countdown[31].CLK
Reset => always0.IN1
Enable <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|main|countdown_hex_decoder:hex
Enable => always0.IN1
c[0] => LessThan0.IN10
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispL.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[0] => dispR.IN1
c[1] => LessThan0.IN9
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[1] => dispR.IN1
c[2] => LessThan0.IN8
c[2] => dispR.IN1
c[2] => dispR.IN1
c[2] => dispR.IN1
c[2] => dispR.IN1
c[2] => dispR.IN1
c[2] => dispR.IN1
c[2] => dispR.IN1
c[3] => LessThan0.IN7
c[3] => dispR.IN0
c[3] => dispR.IN0
c[3] => dispR.IN0
c[3] => dispR.IN0
c[4] => LessThan0.IN6
c[4] => dispR.IN1
c[4] => dispR.IN1
c[4] => dispR.IN1
c[4] => dispR.IN1
dispR[0] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispR[1] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispR[2] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispR[3] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispR[4] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispR[5] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispR[6] <= dispR.DB_MAX_OUTPUT_PORT_TYPE
dispL[0] <= dispL.DB_MAX_OUTPUT_PORT_TYPE
dispL[1] <= dispL.DB_MAX_OUTPUT_PORT_TYPE
dispL[2] <= dispL.DB_MAX_OUTPUT_PORT_TYPE
dispL[3] <= dispL.DB_MAX_OUTPUT_PORT_TYPE
dispL[4] <= dispL.DB_MAX_OUTPUT_PORT_TYPE
dispL[5] <= <VCC>
dispL[6] <= dispL.DB_MAX_OUTPUT_PORT_TYPE


|main|colour_hex_decoder:light_horizontal
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN0
c[1] => display.IN0
c[1] => display.IN0
c[1] => display.IN0
c[2] => display.IN1
c[2] => display.IN1
c[2] => display.IN1
c[2] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


|main|colour_hex_decoder:light_vertical
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[0] => display.IN1
c[1] => display.IN0
c[1] => display.IN0
c[1] => display.IN0
c[1] => display.IN0
c[2] => display.IN1
c[2] => display.IN1
c[2] => display.IN1
c[2] => display.IN1
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


|main|fill:vga_map
CLOCK_50 => CLOCK_50.IN1
KEY[0] => resetn.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
my_3_bit_input[0] => Mux0.IN10
my_3_bit_input[0] => Mux1.IN10
my_3_bit_input[1] => Mux0.IN9
my_3_bit_input[1] => Mux1.IN9
my_3_bit_input[2] => Mux0.IN8
my_3_bit_input[2] => Mux1.IN8
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B


|main|fill:vga_map|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|main|fill:vga_map|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|main|fill:vga_map|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_crl1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_crl1:auto_generated.data_a[0]
data_a[1] => altsyncram_crl1:auto_generated.data_a[1]
data_a[2] => altsyncram_crl1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_crl1:auto_generated.address_a[0]
address_a[1] => altsyncram_crl1:auto_generated.address_a[1]
address_a[2] => altsyncram_crl1:auto_generated.address_a[2]
address_a[3] => altsyncram_crl1:auto_generated.address_a[3]
address_a[4] => altsyncram_crl1:auto_generated.address_a[4]
address_a[5] => altsyncram_crl1:auto_generated.address_a[5]
address_a[6] => altsyncram_crl1:auto_generated.address_a[6]
address_a[7] => altsyncram_crl1:auto_generated.address_a[7]
address_a[8] => altsyncram_crl1:auto_generated.address_a[8]
address_a[9] => altsyncram_crl1:auto_generated.address_a[9]
address_a[10] => altsyncram_crl1:auto_generated.address_a[10]
address_a[11] => altsyncram_crl1:auto_generated.address_a[11]
address_a[12] => altsyncram_crl1:auto_generated.address_a[12]
address_a[13] => altsyncram_crl1:auto_generated.address_a[13]
address_a[14] => altsyncram_crl1:auto_generated.address_a[14]
address_b[0] => altsyncram_crl1:auto_generated.address_b[0]
address_b[1] => altsyncram_crl1:auto_generated.address_b[1]
address_b[2] => altsyncram_crl1:auto_generated.address_b[2]
address_b[3] => altsyncram_crl1:auto_generated.address_b[3]
address_b[4] => altsyncram_crl1:auto_generated.address_b[4]
address_b[5] => altsyncram_crl1:auto_generated.address_b[5]
address_b[6] => altsyncram_crl1:auto_generated.address_b[6]
address_b[7] => altsyncram_crl1:auto_generated.address_b[7]
address_b[8] => altsyncram_crl1:auto_generated.address_b[8]
address_b[9] => altsyncram_crl1:auto_generated.address_b[9]
address_b[10] => altsyncram_crl1:auto_generated.address_b[10]
address_b[11] => altsyncram_crl1:auto_generated.address_b[11]
address_b[12] => altsyncram_crl1:auto_generated.address_b[12]
address_b[13] => altsyncram_crl1:auto_generated.address_b[13]
address_b[14] => altsyncram_crl1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_crl1:auto_generated.clock0
clock1 => altsyncram_crl1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_crl1:auto_generated.q_b[0]
q_b[1] <= altsyncram_crl1:auto_generated.q_b[1]
q_b[2] <= altsyncram_crl1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|main|fill:vga_map|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_crl1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|main|fill:vga_map|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_crl1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|main|fill:vga_map|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_crl1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|main|fill:vga_map|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_crl1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|main|fill:vga_map|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_crl1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|main|fill:vga_map|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|main|fill:vga_map|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|main|fill:vga_map|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|main|fill:vga_map|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|main|fill:vga_map|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


